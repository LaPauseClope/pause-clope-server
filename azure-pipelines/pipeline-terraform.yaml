trigger:
- devops

pool:
  name: SelfHosted

variables:
- group: LaPauseClope
- name: TF_ROOT
  value: 'terraform'
- name: ANSIBLE_PIPELINE_ID
  value: '13'

stages:

- stage: TerraformPlan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    displayName: 'Run Terraform Plan'
    pool:
      name: SelfHosted
    steps:
    - checkout: self

    - powershell: |
        terraform -version
      displayName: 'Check Terraform Version'

    - powershell: |
        terraform init `
          -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
          -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
          -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
          -backend-config="key=terraform.tfstate" `
          -backend-config="access_key=$env:ARM_ACCESS_KEY"
      workingDirectory: $(TF_ROOT)
      displayName: 'Terraform Init'
      env:
        ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
        ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
        ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)

    - powershell: |
        terraform plan -out=tfplan
      workingDirectory: $(TF_ROOT)
      displayName: 'Terraform Plan'
      env:
        ARM_CLIENT_ID: $(ARM_AZURE_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_AZURE_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_AZURE_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_AZURE_TENANT_ID)

        TF_VAR_backend_rg_name: $(ARM_RESOURCE_GROUP_NAME)
        TF_VAR_backend_account_name: $(ARM_STORAGE_ACCOUNT_NAME)
        TF_VAR_backend_container_name: $(ARM_CONTAINER_NAME)
        TF_VAR_backend_access_key: $(ARM_ACCESS_KEY)
        TF_VAR_admin_password: $(ARM_VM_PASSWORD)
        TF_VAR_subscription_id: $(ARM_AZURE_SUBSCRIPTION_ID)
        TF_VAR_client_id: $(ARM_AZURE_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_AZURE_CLIENT_SECRET)
        TF_VAR_tenant_id: $(ARM_AZURE_TENANT_ID)

    - publish: $(TF_ROOT)/tfplan
      artifact: tfplan
      displayName: 'Publish tfplan artifact'

- stage: TerraformApply
  displayName: 'Terraform Apply'
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - job: Apply
    displayName: 'Run Terraform Apply'
    pool:
      name: SelfHosted
    steps:
    - checkout: self

    - download: current
      artifact: tfplan
      displayName: 'Download tfplan artifact'

    - powershell: |
        Get-ChildItem -Recurse $env:PIPELINE_WORKSPACE
      displayName: 'Show downloaded artifact files'

    - powershell: |
        terraform init `
          -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
          -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
          -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
          -backend-config="key=terraform.tfstate" `
          -backend-config="access_key=$env:ARM_ACCESS_KEY"
      workingDirectory: $(TF_ROOT)
      displayName: 'Terraform Init (Apply)'
      env:
        ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
        ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
        ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)

    - powershell: |
        terraform apply -auto-approve "$env:PIPELINE_WORKSPACE\tfplan\tfplan"
      workingDirectory: $(TF_ROOT)
      displayName: 'Terraform Apply'
      env:
        PIPELINE_WORKSPACE: $(Pipeline.Workspace)

        ARM_CLIENT_ID: $(ARM_AZURE_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_AZURE_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_AZURE_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_AZURE_TENANT_ID)

        TF_VAR_backend_rg_name: $(ARM_RESOURCE_GROUP_NAME)
        TF_VAR_backend_account_name: $(ARM_STORAGE_ACCOUNT_NAME)
        TF_VAR_backend_container_name: $(ARM_CONTAINER_NAME)
        TF_VAR_backend_access_key: $(ARM_ACCESS_KEY)
        TF_VAR_admin_password: $(ARM_VM_PASSWORD)
        TF_VAR_subscription_id: $(ARM_AZURE_SUBSCRIPTION_ID)
        TF_VAR_client_id: $(ARM_AZURE_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_AZURE_CLIENT_SECRET)
        TF_VAR_tenant_id: $(ARM_AZURE_TENANT_ID)

    - powershell: |
        $org = "https://dev.azure.com/fabiomaratea"
        $project = "HackatonYnov"
        $pipelineId = 13
        $uri = "$org/_apis/pipelines/$pipelineId/runs?api-version=7.0-preview.1&project=$project" 

        $pat = "$(AZDO_PAT)"
        $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$pat"))
        
        $headers = @{
          Authorization = "Basic $base64AuthInfo"
          "Content-Type" = "application/json"
        }

        $body = @{} | ConvertTo-Json -Depth 10

        Write-Host "Triggering Ansible pipeline with PAT..."
        Invoke-RestMethod -Uri $uri -Method POST -Headers $headers -Body $body
      displayName: 'Trigger Ansible Pipeline (via PAT)'
      env:
        AZDO_PAT: $(AZDO_PAT)
