variables:
  - group: LaPauseClope

trigger:
  - devops

pool:
  name: SelfHosted

stages:
  - stage: TerraformPlan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlanJob
        displayName: 'Generate Terraform Plan'
        steps:
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'PauseClope'
              ScriptType: 'InlineScript'
              Inline: |
                cd terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"

                terraform plan `
                  -out=terraform.tfplan `
                  -var="admin_password=$env:ARM_VM_PASSWORD"
              preferredAzurePowerShellVersion: '5.10.0'
            displayName: 'Generate Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: terraform/terraform.tfplan
              ArtifactName: '$(Build.BuildId)-tfplan'
              publishLocation: 'Container'
            displayName: 'Publish Plan Artifact'

  - stage: TerraformApply
    displayName: 'Terraform Apply'
    dependsOn: TerraformPlan
    jobs:
      - job: TerraformApplyJob
        displayName: 'Apply Terraform Plan'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(Build.BuildId)-tfplan'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Plan Artifact'

          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'PauseClope'
              ScriptType: 'InlineScript'
              Inline: |
                cd terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"
                $planPath = "$(System.ArtifactsDirectory)\$(Build.BuildId)-tfplan\terraform.tfplan"
                terraform apply -auto-approve -lock=false -input=false "$planPath"
              preferredAzurePowerShellVersion: '5.10.0'
            displayName: 'Apply Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)

          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'PauseClope'
              ScriptType: 'InlineScript'
              Inline: |
                cd terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"
                $outputDir = "$(Build.ArtifactStagingDirectory)\ssh-keys"
                New-Item -ItemType Directory -Force -Path $outputDir | Out-Null
                terraform output -json | Out-File "$outputDir\terraform-outputs.json"
                Get-Content "$outputDir\terraform-outputs.json"
              preferredAzurePowerShellVersion: '5.10.0'
            displayName: 'Capture Terraform Outputs'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)