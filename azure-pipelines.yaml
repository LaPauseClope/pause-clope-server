variables:
  - group: LaPauseClope

trigger:
  - devops

pool:
  name: SelfHosted

stages:
  - stage: TerraformPlan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlanJob
        displayName: 'Generate Terraform Plan'
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Checking PowerShell version..."
                $PSVersionTable.PSVersion
                Write-Host "Checking Azure CLI version..."
                az --version
                Write-Host "Checking Terraform version..."
                try { terraform --version } catch { Write-Error "Terraform not found or failed: $_" }
                Write-Host "Checking current directory..."
                Get-Location
                Write-Host "Listing directory contents..."
                Get-ChildItem -Path .
                Write-Host "Checking environment variables..."
                Write-Host "ARM_CLIENT_ID: $env:ARM_CLIENT_ID"
                Write-Host "ARM_TENANT_ID: $env:ARM_TENANT_ID"
                Write-Host "ARM_SUBSCRIPTION_ID: $env:ARM_SUBSCRIPTION_ID"
                Write-Host "ARM_RESOURCE_GROUP_NAME: $env:ARM_RESOURCE_GROUP_NAME"
            displayName: 'Check Environment'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Testing Azure login..."
                try {
                  az login --service-principal -u $env:ARM_CLIENT_ID -p $env:ARM_CLIENT_SECRET --tenant $env:ARM_TENANT_ID
                  az account show
                  Write-Host "Login successful, showing account details..."
                } catch {
                  Write-Error "Azure login failed: $_"
                  exit 1
                }
            displayName: 'Test Azure Login'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Navigating to terraform directory..."
                try {
                  Set-Location -Path terraform
                  Write-Host "Current directory: $(Get-Location)"
                } catch {
                  Write-Error "Failed to navigate to terraform directory: $_"
                  exit 1
                }
                Write-Host "Running terraform init..."
                try {
                  terraform init -upgrade `
                    -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                    -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                    -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                    -backend-config="access_key=$env:ARM_ACCESS_KEY"
                  Write-Host "Terraform init completed successfully."
                } catch {
                  Write-Error "Terraform init failed: $_"
                  exit 1
                }
            displayName: 'Run Terraform Init'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Running terraform plan..."
                try {
                  Set-Location -Path terraform
                  terraform plan -out terraform.tfplan `
                    --var="client_id=$env:ARM_CLIENT_ID" `
                    --var="client_secret=$env:ARM_CLIENT_SECRET" `
                    --var="subscription_id=$env:ARM_SUBSCRIPTION_ID" `
                    --var="backend_container_name=$env:ARM_CONTAINER_NAME" `
                    --var="backend_rg_name=$env:ARM_RESOURCE_GROUP_NAME" `
                    --var="backend_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                    --var="backend_access_key=$env:ARM_ACCESS_KEY" `
                    --var="tenant_id=$env:ARM_TENANT_ID" `
                    --var="admin_password=$env:ARM_VM_PASSWORD"
                  Write-Host "Terraform plan completed successfully."
                } catch {
                  Write-Error "Terraform plan failed: $_"
                  exit 1
                }
            displayName: 'Run Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: terraform/terraform.tfplan
              ArtifactName: '$(Build.BuildId)-tfplan'
              publishLocation: 'Container'
            displayName: 'Publish Plan Artifact'