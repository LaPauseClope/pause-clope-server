variables:
  - group: LaPauseClope

trigger:
  - devops

pool:
  name: SelfHosted

stages:
  - stage: TerraformPlan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlanJob
        displayName: 'Generate Terraform Plan'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                Set-Location -Path terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"
                terraform plan -out=terraform.tfplan `
                  -var="client_id=$env:ARM_CLIENT_ID" `
                  -var="client_secret=$env:ARM_CLIENT_SECRET" `
                  -var="subscription_id=$env:ARM_SUBSCRIPTION_ID" `
                  -var="backend_container_name=$env:ARM_CONTAINER_NAME" `
                  -var="backend_rg_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -var="backend_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -var="backend_access_key=$env:ARM_ACCESS_KEY" `
                  -var="tenant_id=$env:ARM_TENANT_ID" `
                  -var="admin_password=$env:ARM_VM_PASSWORD"
            displayName: 'Generate Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: terraform/terraform.tfplan
              ArtifactName: '$(Build.BuildId)-tfplan'
              publishLocation: 'Container'
            displayName: 'Publish Plan Artifact'

  - stage: TerraformApply
    displayName: 'Terraform Apply'
    dependsOn: TerraformPlan
    jobs:
      - job: TerraformApplyJob
        displayName: 'Apply Terraform Plan'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(Build.BuildId)-tfplan'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Plan Artifact'
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                Set-Location -Path terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"
                terraform apply -auto-approve -lock=false -input=false $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan/terraform.tfplan
            displayName: 'Apply Terraform Plan'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Set-Location -Path terraform
                terraform init -upgrade `
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" `
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" `
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" `
                  -backend-config="access_key=$env:ARM_ACCESS_KEY"
                New-Item -ItemType Directory -Path "$(Build.ArtifactStagingDirectory)/ssh-keys" -Force
                terraform output -json | Out-File -FilePath "$(Build.ArtifactStagingDirectory)/ssh-keys/terraform-outputs.json"
                Get-Content -Path "$(Build.ArtifactStagingDirectory)/ssh-keys/terraform-outputs.json"
            displayName: 'Capture Terraform Outputs'