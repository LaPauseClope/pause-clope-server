variables:
  - group: LaPauseClope

trigger:
  paths:
    include:
      - azure-pipeline.yaml
      - terraform/**

pool:
  name: SelfHosted

stages:
  - stage: TerraformPlan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlanJob
        displayName: 'Generate Terraform Plan'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                cd terraform
                terraform init -upgrade \
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" \
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" \
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" \
                  -backend-config="access_key=$env:ARM_ACCESS_KEY" \          
                terraform plan -out=terraform.tfplan \
                  -var="backend_container_name=$env:ARM_CONTAINER_NAME" \
                  -var="backend_rg_name=$env:ARM_RESOURCE_GROUP_NAME" \
                  -var="backend_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" \
                  -var="backend_access_key=$env:ARM_ACCESS_KEY" \
                  -var="admin_password=$env:ARM_VM_PASSWORD"
            displayName: 'Generate Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: terraform/terraform.tfplan
              ArtifactName: '$(Build.BuildId)-tfplan'
              publishLocation: 'Container'
            displayName: 'Publish Plan Artifact'

  - stage: TerraformApply
    displayName: 'Terraform Apply'
    dependsOn: TerraformPlan
    jobs:
      - job: TerraformApplyJob
        displayName: 'Apply Terraform Plan'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(Build.BuildId)-tfplan'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Plan Artifact'

          - task: AzureCLI@2
            inputs:
              azureSubscription: PauseClope
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                cd terraform
                terraform init -upgrade \
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" \
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" \
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" \
                  -backend-config="access_key=$env:ARM_ACCESS_KEY" \
                $planPath = "$(Build.ArtifactStagingDirectory)\$(Build.BuildId)-tfplan\terraform.tfplan"
                terraform apply -auto-approve -lock=false -input=false $planPath
            displayName: 'Apply Terraform Plan'
            env:
              ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
              ARM_CONTAINER_NAME: $(ARM_CONTAINER_NAME)
              ARM_RESOURCE_GROUP_NAME: $(ARM_RESOURCE_GROUP_NAME)
              ARM_STORAGE_ACCOUNT_NAME: $(ARM_STORAGE_ACCOUNT_NAME)
              ARM_VM_PASSWORD: $(ARM_VM_PASSWORD)

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                cd terraform
                terraform init -upgrade \
                  -backend-config="resource_group_name=$env:ARM_RESOURCE_GROUP_NAME" \
                  -backend-config="storage_account_name=$env:ARM_STORAGE_ACCOUNT_NAME" \
                  -backend-config="container_name=$env:ARM_CONTAINER_NAME" \
                  -backend-config="access_key=$env:ARM_ACCESS_KEY" \
                  -backend-config="admin_password=$env:ARM_VM_PASSWORD"

                $outputDir = "$(Build.ArtifactStagingDirectory)\ssh-keys"
                New-Item -ItemType Directory -Force -Path $outputDir | Out-Null

                terraform output -json | Out-File "$outputDir\terraform-outputs.json"
                Get-Content "$outputDir\terraform-outputs.json"
            displayName: 'Capture Terraform Outputs'
