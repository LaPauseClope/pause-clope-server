- name: Install required Ansible collections
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Ensure community.docker is installed
      ansible.builtin.command:
        cmd: ansible-galaxy collection install community.docker --force

- name: Configure Ubuntu server
  hosts: server
  become: yes
  vars:
    compose_dir: /home/adminuser

  tasks:
    - name: Ensure Python is installed (for Ansible)
      raw: sudo apt-get update && sudo apt-get install -y python3
      changed_when: false

    - name: Gather facts
      setup:

    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Ensure Docker is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure docker cli-plugins directory exists
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: '0755'

    - name: Install Docker Compose v2 manually
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: '0755'

    - name: Check Docker Compose version
      command: docker compose version

    - name: Add adminuser to docker group
      user:
        name: adminuser
        groups: docker
        append: yes

    - name: Create .env file from template
      template:
        src: env.j2
        dest: "{{ compose_dir }}/.env"
      become_user: adminuser

    - name: Copy docker-compose.yml
      copy:
        src: docker-compose.yml
        dest: "{{ compose_dir }}/docker-compose.yml"
      become_user: adminuser

    - name: Copy Dockerfile
      copy:
        src: Dockerfile
        dest: "{{ compose_dir }}/Dockerfile"
        owner: adminuser
        group: adminuser
        mode: '0644'

    - name: Debug file presence
      debug:
        msg: "Dockerfile exists: {{ dockerfile_check.stat.exists }}, Compose exists: {{ compose_check.stat.exists }}"
      when: dockerfile_check.stat.exists is defined and compose_check.stat.exists is defined

    - name: Check Dockerfile
      stat:
        path: "{{ compose_dir }}/Dockerfile"
      register: dockerfile_check

    - name: Check docker-compose.yml
      stat:
        path: "{{ compose_dir }}/docker-compose.yml"
      register: compose_check

    - name: Ensure adminuser can use Docker
      user:
        name: adminuser
        groups: docker
        append: yes

    - name: Start services with Docker Compose (community module)
      community.docker.docker_compose_v2:
        project_src: "{{ compose_dir }}"